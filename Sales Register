REPORT  YSM_OBJECT4.


**********************************
*******VARIABLE DECLARATION*******
**********************************

TYPE-POOLS SLIS.
TABLES : VBRK,VBRP,VBAP,VBAK.
DATA W_CPOS TYPE I.


************************************
******Types Table Declarations******
************************************

TYPES : BEGIN OF TY_FINAL,
        VKORG TYPE VBRK-VKORG,
        VTWEG TYPE VBRK-VTWEG,
        VKGRP TYPE VBAK-VKGRP,
        BEZEI TYPE TVGRT-BEZEI,
        WERKS TYPE VBAP-WERKS,
        PNAME TYPE T001W-NAME1,
        BZIRK TYPE VBRK-BZIRK,
        BZTXT TYPE T171T-BZTXT,
          SPC TYPE T005T-LANDX,
          SHC TYPE T005T-LANDX,
        KUNAG TYPE VBRK-KUNAG,
       SPNAME TYPE KNA1-NAME1,
       SHNAME TYPE KNA1-NAME1,
        EMPST TYPE VBKD-EMPST,
        BSTKD TYPE VBKD-BSTKD,
        BSTDK TYPE VBKD-BSTDK,
        AUBEL TYPE VBRP-AUBEL,
        POSNR TYPE VBAP-POSNR,
        AUDAT TYPE VBAK-AUDAT,
        VBELN TYPE VBRK-VBELN,
        FKDAT TYPE VBRK-FKDAT,
        MATNR TYPE VBRP-MATNR,
        MAKTX TYPE MAKT-MAKTX,
        CHARG TYPE VBRP-CHARG,
        FKIMG TYPE VBRP-FKIMG,
        VRKME TYPE VBRP-VRKME,
        WAERK TYPE VBRK-WAERK,
        BP(13) TYPE C,
        BED(13) TYPE C,
        ECESS(13) TYPE C,
        HCESS(13) TYPE C,
        VAT(13) TYPE C,
        KZWI3 TYPE VBRP-KZWI3,
        KZWI4 TYPE VBRP-KZWI4,
        KZWI6 TYPE VBRP-KZWI6,
        INCO1 TYPE VBKD-INCO1,
        INCO2 TYPE VBKD-INCO2,
        END OF TY_FINAL.


TYPES : BEGIN OF TY_VBRK,
        VBELN TYPE VBRK-VBELN,
        FKART TYPE VBRK-FKART,
        WAERK TYPE VBRK-WAERK,
        VKORG TYPE VBRK-VKORG,
        VTWEG TYPE VBRK-VTWEG,
        KNUMV TYPE VBRK-KNUMV,
        FKDAT TYPE VBRK-FKDAT,
        BZIRK TYPE VBRK-BZIRK,
        KURRF TYPE VBRK-KURRF,
        LAND1 TYPE VBRK-LAND1,
        KUNAG TYPE VBRK-KUNAG,
        END OF TY_VBRK.


TYPES : BEGIN OF TY_KNA1,
        KUNNR TYPE KNA1-KUNNR,
        LAND1 TYPE KNA1-LAND1,
        NAME1 TYPE KNA1-NAME1,
        END OF TY_KNA1.


TYPES : BEGIN OF TY_VBRP,
        VBELN TYPE VBRP-VBELN,
        POSNR TYPE VBRP-POSNR,
        FKIMG TYPE VBRP-FKIMG,
        VRKME TYPE VBRP-VRKME,
        VGBEL TYPE VBRP-VGBEL,
        AUBEL TYPE VBRP-AUBEL,
        AUPOS TYPE VBRP-AUPOS,
        MATNR TYPE VBRP-MATNR,
        CHARG TYPE VBRP-CHARG,
        WERKS TYPE VBRP-WERKS,
        KZWI3 TYPE VBRP-KZWI3,
        KZWI4 TYPE VBRP-KZWI4,
        KZWI6 TYPE VBRP-KZWI6,
        END OF TY_VBRP.


TYPES : BEGIN OF TY_T171T,
        SPRAS TYPE T171T-SPRAS,
        BZIRK TYPE T171T-BZIRK,
        BZTXT TYPE T171T-BZTXT,
        END OF TY_T171T.


TYPES : BEGIN OF TY_KONV,
        KNUMV TYPE KONV-KNUMV,
        KSCHL TYPE KONV-KSCHL,
        KAWRT TYPE KONV-KAWRT,
        KBETR TYPE KONV-KBETR,
        END OF TY_KONV.



TYPES : BEGIN OF TY_T005T,
        SPRAS TYPE T005T-SPRAS,
        LAND1 TYPE T005T-LAND1,
        LANDX TYPE T005T-LANDX,
        END OF TY_T005T.



TYPES : BEGIN OF TY_VBAP,
        VBELN TYPE VBAP-VBELN,
        POSNR TYPE VBAP-POSNR,
        SPART TYPE VBAP-SPART,
        END OF TY_VBAP.



TYPES : BEGIN OF TY_MAKT,
        MATNR TYPE MAKT-MATNR,
        SPRAS TYPE MAKT-SPRAS,
        MAKTX TYPE MAKT-MAKTX,
        END OF TY_MAKT.



TYPES : BEGIN OF TY_T001W,
        WERKS TYPE T001W-WERKS,
        NAME1 TYPE T001W-NAME1,
        END OF TY_T001W.



TYPES : BEGIN OF TY_VBAK,
        VBELN TYPE VBAK-VBELN,
        AUDAT TYPE VBAK-AUDAT,
        VKGRP TYPE VBAK-VKGRP,
        END OF TY_VBAK.


TYPES : BEGIN OF TY_VBKD,
        VBELN TYPE VBKD-VBELN,
        POSNR TYPE VBKD-POSNR,
        INCO1 TYPE VBKD-INCO1,
        INCO2 TYPE VBKD-INCO2,
        EMPST TYPE VBKD-EMPST,
        BSTKD TYPE VBKD-BSTKD,
        BSTDK TYPE VBKD-BSTDK,
        END OF TY_VBKD.


TYPES : BEGIN OF TY_VBPA,
        VBELN TYPE VBPA-VBELN,
        POSNR TYPE VBPA-POSNR,
        KUNNR TYPE VBPA-KUNNR,
        END OF TY_VBPA.



TYPES : BEGIN OF TY_TVGRT,
        VKGRP TYPE TVGRT-VKGRP,
        BEZEI TYPE TVGRT-BEZEI,
        END OF TY_TVGRT.



************************************
*****Internal Table & Workarea******
************************************

DATA WA_FINAL TYPE TY_FINAL.
DATA IT_FINAL TYPE TABLE OF TY_FINAL.


DATA WA_VBRK TYPE TY_VBRK.
DATA IT_VBRK TYPE TABLE OF TY_VBRK.


DATA WA_KNA1 TYPE TY_KNA1.
DATA IT_KNA1 TYPE TABLE OF TY_KNA1.


DATA WA_KNA11 TYPE TY_KNA1.
DATA IT_KNA11 TYPE TABLE OF TY_KNA1.


DATA WA_VBRP TYPE TY_VBRP.
DATA IT_VBRP TYPE TABLE OF TY_VBRP.


DATA WA_T171T TYPE TY_T171T.
DATA IT_T171T TYPE TABLE OF TY_T171T.


DATA WA_KONV TYPE TY_KONV.
DATA IT_KONV TYPE TABLE OF TY_KONV.


DATA WA_T005T TYPE TY_T005T.
DATA IT_T005T TYPE TABLE OF TY_T005T.


DATA WA_T005T1 TYPE TY_T005T.
DATA IT_T005T1 TYPE TABLE OF TY_T005T.


DATA WA_VBAP TYPE TY_VBAP.
DATA IT_VBAP TYPE TABLE OF TY_VBAP.


DATA WA_MAKT TYPE TY_MAKT.
DATA IT_MAKT TYPE TABLE OF TY_MAKT.


DATA WA_T001W TYPE TY_T001W.
DATA IT_T001W TYPE TABLE OF TY_T001W.


DATA WA_VBAK TYPE TY_VBAK.
DATA IT_VBAK TYPE TABLE OF TY_VBAK.


DATA WA_VBKD TYPE TY_VBKD.
DATA IT_VBKD TYPE TABLE OF TY_VBKD.


DATA WA_VBPA TYPE TY_VBPA.
DATA IT_VBPA TYPE TABLE OF TY_VBPA.


DATA WA_TVGRT TYPE TY_TVGRT.
DATA IT_TVGRT TYPE TABLE OF TY_TVGRT.


***************************************
**FieldCatalog IT & WA Layout Declare**
***************************************

DATA : IT_FCAT TYPE SLIS_T_FIELDCAT_ALV,
       WA_FCAT LIKE LINE OF IT_FCAT.

DATA WA_LAYOUT TYPE SLIS_LAYOUT_ALV.


*****************************************
******Selection Screen Declaration*******
*****************************************

SELECTION-SCREEN BEGIN OF BLOCK A WITH FRAME TITLE TEXT-001.

    SELECT-OPTIONS SO_VKORG FOR VBRK-VKORG OBLIGATORY.
    SELECT-OPTIONS SO_VTWEG FOR VBRK-VTWEG.
    SELECT-OPTIONS SO_WERKS FOR VBRP-WERKS.
    SELECT-OPTIONS SO_WAERK FOR VBRK-WAERK.
    SELECT-OPTIONS SO_LAND1 FOR VBRK-LAND1.
    SELECT-OPTIONS SO_FKART FOR VBRK-FKART.
    SELECT-OPTIONS SO_KUNAG FOR VBRK-KUNAG.
    SELECT-OPTIONS SO_VBELN FOR VBRK-VBELN.
    SELECT-OPTIONS SO_FKDAT FOR VBRK-FKDAT.
    SELECT-OPTIONS SO_MATNR FOR VBRP-MATNR.
    SELECT-OPTIONS SO_CHARG FOR VBRP-CHARG.
    SELECT-OPTIONS SO_AUBEL FOR VBRP-AUBEL.
    SELECT-OPTIONS SO_VGBEL FOR VBRP-VGBEL.
    SELECT-OPTIONS SO_SPART FOR VBAP-SPART.
    SELECT-OPTIONS SO_AUDAT FOR VBAK-AUDAT.
SELECTION-SCREEN END OF BLOCK A.


*****************************
***PERFORM DECLARATION*******
*****************************


START-OF-SELECTION.

PERFORM GET_INITIAL_DATA.
PERFORM POPULATE_FINAL_IT.
PERFORM FILL_FCAT_IT.


*&---------------------------------------------------------------------*
*&      Form  GET_INITIAL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_INITIAL_DATA .

SELECT VBELN FKART WAERK VKORG VTWEG KNUMV FKDAT BZIRK
KURRF LAND1 KUNAG FROM VBRK INTO TABLE IT_VBRK
                  WHERE VKORG IN SO_VKORG AND
                        VTWEG IN SO_VTWEG AND
                        WAERK IN SO_WAERK AND
                        LAND1 IN SO_LAND1 AND
                        FKART IN SO_FKART AND
                        KUNAG IN SO_KUNAG AND
                        VBELN IN SO_VBELN AND
                        FKDAT IN SO_FKDAT.

IF NOT IT_VBRK IS INITIAL.
   SELECT KUNNR LAND1 NAME1 FROM KNA1 INTO TABLE IT_KNA1 FOR ALL ENTRIES
                                 IN IT_VBRK WHERE KUNNR = IT_VBRK-KUNAG.

SELECT VBELN POSNR FKIMG VRKME VGBEL AUBEL AUPOS MATNR CHARG WERKS KZWI3
 KZWI4 KZWI6 FROM VBRP INTO TABLE IT_VBRP FOR ALL ENTRIES IN IT_VBRK
                                     WHERE VBELN = IT_VBRK-VBELN AND
                                           WERKS IN SO_WERKS AND
                                           MATNR IN SO_MATNR AND
                                           CHARG IN SO_CHARG AND
                                           AUBEL IN SO_AUBEL AND
                                           VGBEL IN SO_VGBEL.


SELECT BZIRK BZTXT FROM T171T INTO TABLE IT_T171T
FOR ALL ENTRIES IN IT_VBRK WHERE BZIRK = IT_VBRK-BZIRK
                             AND SPRAS = SY-LANGU.

SELECT KNUMV KSCHL KAWRT KBETR FROM KONV INTO TABLE IT_KONV
FOR ALL ENTRIES IN IT_VBRK WHERE KNUMV = IT_VBRK-KNUMV.

ENDIF.

IF NOT IT_KNA1 IS INITIAL.

  SELECT LAND1 LANDX FROM T005T INTO TABLE IT_T005T FOR ALL ENTRIES IN
  IT_KNA1 WHERE LAND1 = IT_KNA1-LAND1 AND SPRAS = SY-LANGU.

ENDIF.

IF NOT IT_VBRP IS INITIAL.

    SELECT VBELN POSNR SPART FROM VBAP INTO TABLE IT_VBAP FOR ALL
    ENTRIES IN IT_VBRP WHERE VBELN = IT_VBRP-AUBEL AND
                             POSNR = IT_VBRP-AUPOS AND
                             SPART IN SO_SPART.

    SELECT MATNR MAKTX FROM MAKT INTO TABLE IT_MAKT FOR ALL ENTRIES IN
                              IT_VBRP WHERE MATNR = IT_VBRP-MATNR AND
                                            SPRAS = SY-LANGU.

    SELECT WERKS NAME1 FROM T001W INTO TABLE IT_T001W FOR ALL ENTRIES IN
                                    IT_VBRP WHERE WERKS = IT_VBRP-WERKS.
ENDIF.


IF NOT IT_VBAP IS INITIAL.

SELECT VBELN AUDAT VKGRP FROM VBAK INTO TABLE IT_VBAK
FOR ALL ENTRIES IN IT_VBAP WHERE VBELN = IT_VBAP-VBELN
                             AND AUDAT IN SO_AUDAT.
  IF NOT IT_VBAK IS INITIAL.

    SELECT VKGRP BEZEI FROM TVGRT INTO TABLE IT_TVGRT
    FOR ALL ENTRIES IN IT_VBAK WHERE VKGRP = IT_VBAK-VKGRP AND
                                     SPRAS = SY-LANGU.
  ENDIF.


SELECT VBELN POSNR KUNNR FROM VBPA INTO TABLE IT_VBPA
FOR ALL ENTRIES IN IT_VBAP WHERE VBELN = IT_VBAP-VBELN AND
                                 POSNR = IT_VBAP-POSNR AND
                                 PARVW = 'SH'.
  IF NOT IT_VBPA IS INITIAL.

      SELECT KUNNR LAND1 NAME1 FROM KNA1 INTO TABLE IT_KNA11 FOR ALL
      ENTRIES IN IT_VBPA WHERE KUNNR = IT_VBPA-KUNNR.
  ENDIF.

  IF NOT IT_KNA11 IS INITIAL.
      SELECT SPRAS LAND1 LANDX FROM T005T INTO TABLE IT_T005T FOR ALL
      ENTRIES IN IT_KNA11 WHERE LAND1 = IT_KNA11-LAND1
                            AND SPRAS = SY-LANGU.
  ENDIF.

SELECT VBELN POSNR INCO1 INCO2 EMPST BSTKD BSTDK FROM VBKD INTO TABLE IT_VBKD
FOR ALL ENTRIES IN IT_VBAP WHERE VBELN = IT_VBAP-VBELN AND
                                 POSNR = IT_VBAP-POSNR.

ENDIF.


ENDFORM.                    " GET_INITIAL_DATA
*&---------------------------------------------------------------------*
*&      Form  POPULATE_FINAL_IT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM POPULATE_FINAL_IT .

LOOP AT IT_VBRP INTO WA_VBRP.
WA_FINAL-WERKS = WA_VBRP-WERKS.
WA_FINAL-AUBEL = WA_VBRP-AUBEL.
WA_FINAL-MATNR = WA_VBRP-MATNR.
WA_FINAL-CHARG = WA_VBRP-CHARG.
WA_FINAL-FKIMG = WA_VBRP-FKIMG.
WA_FINAL-VRKME = WA_VBRP-VRKME.
WA_FINAL-KZWI3 = WA_VBRP-KZWI3.
WA_FINAL-KZWI4 = WA_VBRP-KZWI4.
WA_FINAL-KZWI6 = WA_VBRP-KZWI6.

READ TABLE IT_T001W INTO WA_T001W WITH KEY WERKS = WA_VBRP-WERKS.

IF SY-SUBRC = 0.

    WA_FINAL-PNAME = WA_T001W-NAME1.

ENDIF.

READ TABLE IT_MAKT INTO WA_MAKT WITH KEY MATNR = WA_VBRP-MATNR.


IF SY-SUBRC = 0.

    WA_FINAL-MAKTX = WA_MAKT-MAKTX.

ENDIF.

READ TABLE IT_VBAP INTO WA_VBAP WITH KEY VBELN = WA_VBRP-AUBEL
                                         POSNR = WA_VBRP-AUPOS.

IF SY-SUBRC = 0.

  WA_FINAL-POSNR = WA_VBAP-POSNR.

READ TABLE IT_VBKD INTO WA_VBKD WITH KEY VBELN = WA_VBAP-VBELN
                                         POSNR = WA_VBAP-POSNR.

    IF SY-SUBRC = 0.

      WA_FINAL-EMPST = WA_VBKD-EMPST.
      WA_FINAL-BSTKD = WA_VBKD-BSTKD.
      WA_FINAL-BSTDK = WA_VBKD-BSTDK.
      WA_FINAL-INCO1 = WA_VBKD-INCO1.
      WA_FINAL-INCO2 = WA_VBKD-INCO2.

    ENDIF.

READ TABLE IT_VBPA INTO WA_VBPA WITH KEY VBELN = WA_VBAP-VBELN
                                         POSNR = WA_VBAP-POSNR.

    IF SY-SUBRC = 0.

      READ TABLE IT_KNA11 INTO WA_KNA11 WITH KEY KUNNR = WA_VBPA-KUNNR.

        IF SY-SUBRC = 0.
          WA_FINAL-SHNAME = WA_KNA11-NAME1.

          READ TABLE IT_T005T1 INTO WA_T005T1 WITH KEY
                                LAND1 = WA_KNA11-LAND1.
            IF SY-SUBRC = 0.
              WA_FINAL-SHC = WA_T005T1-LANDX.
            ENDIF.
         ENDIF.
    ENDIF.

READ TABLE IT_VBAK INTO WA_VBAK WITH KEY VBELN = WA_VBAP-VBELN.
  IF SY-SUBRC = 0.
    WA_FINAL-AUDAT = WA_VBAK-AUDAT.
    WA_FINAL-VKGRP = WA_VBAK-VKGRP.

    READ TABLE IT_TVGRT INTO WA_TVGRT WITH KEY VKGRP = WA_VBAK-VKGRP.

      IF SY-SUBRC = 0.
        WA_FINAL-BEZEI = WA_TVGRT-BEZEI.
      ENDIF.
   ENDIF.
ENDIF.

READ TABLE IT_VBRK INTO WA_VBRK WITH KEY VBELN = WA_VBRP-VBELN.

  IF SY-SUBRC = 0.

    WA_FINAL-VKORG = WA_VBRK-VKORG.
    WA_FINAL-VTWEG = WA_VBRK-VTWEG.
    WA_FINAL-BZIRK = WA_VBRK-BZIRK.
    WA_FINAL-KUNAG = WA_VBRK-KUNAG.
    WA_FINAL-VBELN = WA_VBRK-VBELN.
    WA_FINAL-FKDAT = WA_VBRK-FKDAT.
    WA_FINAL-WAERK = WA_VBRK-WAERK.

    READ TABLE IT_KNA1 INTO WA_KNA1 WITH KEY KUNNR = WA_VBRK-KUNAG.

      IF SY-SUBRC = 0.
        WA_FINAL-SPNAME = WA_KNA1-NAME1.

        READ TABLE IT_T005T INTO WA_T005T WITH KEY LAND1 = WA_KNA1-LAND1.

          IF SY-SUBRC = 0.
            WA_FINAL-SPC = WA_T005T-LANDX.
          ENDIF.
       ENDIF.

READ TABLE IT_T171T INTO WA_T171T WITH KEY BZIRK = WA_VBRK-BZIRK.

   IF SY-SUBRC = 0.
     WA_FINAL-BZTXT = WA_T171T-BZTXT.
   ENDIF.

LOOP AT IT_KONV INTO WA_KONV WHERE KNUMV = WA_VBRK-KNUMV.

IF WA_KONV-KSCHL = 'PR00'.
    WA_FINAL-BP = WA_KONV-KAWRT / 10 * WA_KONV-KBETR * WA_VBRK-KURRF.

ELSEIF WA_KONV-KSCHL = 'JEXP' OR WA_KONV-KSCHL = 'JEXQ'.
    WA_FINAL-BED = WA_KONV-KBETR * WA_VBRK-KURRF.

ELSEIF WA_KONV-KSCHL = 'JCEP' OR WA_KONV-KSCHL = 'JCEQ'.
    WA_FINAL-ECESS = WA_KONV-KBETR * WA_VBRK-KURRF.

ELSEIF WA_KONV-KSCHL = 'JCPE' OR WA_KONV-KSCHL = 'JCPQ'.
    WA_FINAL-HCESS = WA_KONV-KBETR * WA_VBRK-KURRF.

ELSEIF WA_KONV-KSCHL = 'JLST' OR WA_KONV-KSCHL = 'JCST'.
    WA_FINAL-VAT = WA_KONV-KBETR * WA_VBRK-KURRF.

ENDIF.
ENDLOOP.
ENDIF.
APPEND WA_FINAL TO IT_FINAL.
CLEAR WA_FINAL.
ENDLOOP.


ENDFORM.                    " POPULATE_FINAL_IT
*&---------------------------------------------------------------------*
*&      Form  FILL_FCAT_IT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_FCAT_IT .




W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'VKORG'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Sales Org'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'VTWEG'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Distribution chn'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'VKGRP'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Sales Grp'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'BEZEI'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Sales grp desc'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'WERKS'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'PLAN'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'PNAME'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Plant desc'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'BZIRK'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Sales distct'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'BZTXT'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Distrct name'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'SPC'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'sold to country'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'SHC'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'dest country'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'KUNAG'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Sold to Party'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'SPNAME'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'sold to party name'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'SHNAME'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Ship to party'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'EMPST'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Final customer'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'BSTKD'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'PO number'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'BSTDK'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'PO date'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'AUBEL'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Sales Order'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'POSNR'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Item no'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'AUDAT'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'SO Date'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'VBELN'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Billing Doc'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'FKDAT'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Billing date'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'MATNR'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'material no'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'MAKTX'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'material desc'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'CHARG'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Batch'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'FKIMG'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Billed Quantity'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'VRKME'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Sales unit'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'WAERK'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Invoice Currency'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'BP'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Base price'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'BED'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'BED in INR'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'ECESS'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'E-CESS in INR'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'HCESS'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'SH-CESS'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'VAT'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'VAT'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'KZWI3'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Insurance'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'KZWI4'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Frieght'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'KZWI6'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'Commission Amount'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'INCO1'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'INCO-1'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.

W_CPOS = W_CPOS + 1.
WA_FCAT-FIELDNAME = 'INCO2'.
WA_FCAT-COL_POS   = W_CPOS.
WA_FCAT-SELTEXT_M = 'INCO-2'.
APPEND WA_FCAT TO IT_FCAT.
CLEAR WA_FCAT.


  WA_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.
  WA_LAYOUT-ZEBRA       = 'X'.


CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
 EXPORTING
   I_CALLBACK_PROGRAM             = SY-CPROG
   IS_LAYOUT                      = WA_LAYOUT
   IT_FIELDCAT                    = IT_FCAT
   I_SAVE                         = 'X'
  TABLES
    T_OUTTAB                       = IT_FINAL.


ENDFORM.                    " FILL_FCAT_IT
